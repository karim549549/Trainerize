generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id                 String    @id @default(uuid())
  email              String    @unique
  googleId           String?
  passwordHash       String?
  username           String
  subscriptionId     Int?
  photoUrl           String?
  googleAccessToken  String?
  googleRefreshToken String?
  role               String    @default("USER")
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  deletedAt          DateTime?

  verificationTokens Token[]

  @@index([email])
}

model UserSubscription {
  userId             String
  subscriptionTierId Int
  startedAt          DateTime @default(now())
  endAt              DateTime

  @@id([userId, subscriptionTierId])
}

model SubscriptionTier {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String
  features    String
  price       Float
}

model Token {
  id        String   @id @default(uuid())
  userId    String
  type      String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  expireAt  DateTime
}

model Recipe {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  instruction String?
  ingrediants String

  servingPerGram    Int
  calories          Int
  totalFat          Int
  saturatedFat      Int
  totalCarbohydrate Int
  sugar             Int
  fiber             Int
  Protein           Int

  isNutsFree      Boolean @default(false)
  isGlutenFree    Boolean @default(false)
  isDairyFree     Boolean @default(false)
  isEggFree       Boolean @default(false)
  isSoyFree       Boolean @default(false)
  isShellfishFree Boolean @default(false)
  isWheatFree     Boolean @default(false)
  isPeanutFree    Boolean @default(false)

  imageUrl               String?
  peraperationTimePerMin Int
  categoryId             Int

  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id          Int     @id @default(autoincrement())
  name        String  @unique
  description String?

  recipes Recipe[]
}
